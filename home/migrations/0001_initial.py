# Generated by Django 3.0.6 on 2020-06-01 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='card_set_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_set', models.CharField(max_length=10)),
                ('date_releced', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='cards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colorIdentity', django_mysql.models.ListCharField(models.CharField(max_length=250), max_length=20000, size=7)),
                ('colorIndicator', django_mysql.models.ListCharField(models.CharField(max_length=250), max_length=20000, size=7)),
                ('colors', models.CharField(max_length=200)),
                ('convertedManaCost', models.DecimalField(decimal_places=1, max_digits=4)),
                ('faceConvertedManaCost', models.DecimalField(decimal_places=1, max_digits=4)),
                ('hasNoDeckLimit', models.BooleanField()),
                ('isReserved', models.BooleanField()),
                ('layout', models.CharField(max_length=100)),
                ('legal_brawl', models.CharField(max_length=200)),
                ('legal_commander', models.CharField(max_length=200)),
                ('legal_duel', models.CharField(max_length=200)),
                ('legal_future', models.CharField(max_length=200)),
                ('legal_frontier', models.CharField(max_length=200)),
                ('legal_legacy', models.CharField(max_length=200)),
                ('legal_modern', models.CharField(max_length=200)),
                ('legal_pauper', models.CharField(max_length=200)),
                ('legal_penny', models.CharField(max_length=200)),
                ('legal_pioneer', models.CharField(max_length=200)),
                ('legal_standard', models.CharField(max_length=200)),
                ('legal_vintage', models.CharField(max_length=200)),
                ('loyalty', models.CharField(max_length=10)),
                ('manaCost', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('names', django_mysql.models.ListCharField(models.CharField(max_length=250), max_length=20000, size=10)),
                ('power', models.CharField(max_length=10)),
                ('side', models.CharField(max_length=100)),
                ('subtypes', django_mysql.models.ListCharField(models.CharField(max_length=250), max_length=20000, size=10)),
                ('supertypes', django_mysql.models.ListCharField(models.CharField(max_length=200), max_length=20000, size=20)),
                ('rulesText', models.CharField(max_length=500)),
                ('toughness', models.CharField(max_length=10)),
                ('type1', models.CharField(max_length=100)),
                ('types', django_mysql.models.ListCharField(models.CharField(max_length=200), max_length=20000, size=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='follow_modle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed', to='home.UserProfile')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to='home.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='decks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deck_name', models.CharField(max_length=100)),
                ('hash_tags', models.CharField(max_length=250)),
                ('deck_discription', models.CharField(max_length=500)),
                ('deck_views', models.PositiveIntegerField()),
                ('deck_copies', models.PositiveIntegerField()),
                ('deck_publish', models.BooleanField(default=False)),
                ('deck_type', models.CharField(default='nome', max_length=20)),
                ('date_publish', models.DateTimeField(auto_now=True)),
                ('deck_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='cards_in_set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.cards')),
                ('card_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.card_set_model')),
            ],
        ),
        migrations.CreateModel(
            name='cards_in_deck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_commander', models.BooleanField(default=False)),
                ('is_sideboard', models.BooleanField(default=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.cards')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.decks')),
            ],
        ),
    ]
